// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVector2uImpl();
void InitDefaultsVector2u();
void InitDefaultsPlayerBaseImpl();
void InitDefaultsPlayerBase();
void InitDefaultsPlayersImpl();
void InitDefaultsPlayers();
inline void InitDefaults() {
  InitDefaultsVector2u();
  InitDefaultsPlayerBase();
  InitDefaultsPlayers();
}
}  // namespace protobuf_test_2eproto
namespace pb {
class PlayerBase;
class PlayerBaseDefaultTypeInternal;
extern PlayerBaseDefaultTypeInternal _PlayerBase_default_instance_;
class Players;
class PlayersDefaultTypeInternal;
extern PlayersDefaultTypeInternal _Players_default_instance_;
class Vector2u;
class Vector2uDefaultTypeInternal;
extern Vector2uDefaultTypeInternal _Vector2u_default_instance_;
}  // namespace pb
namespace pb {

// ===================================================================

class Vector2u : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Vector2u) */ {
 public:
  Vector2u();
  virtual ~Vector2u();

  Vector2u(const Vector2u& from);

  inline Vector2u& operator=(const Vector2u& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector2u(Vector2u&& from) noexcept
    : Vector2u() {
    *this = ::std::move(from);
  }

  inline Vector2u& operator=(Vector2u&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector2u& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector2u* internal_default_instance() {
    return reinterpret_cast<const Vector2u*>(
               &_Vector2u_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Vector2u* other);
  friend void swap(Vector2u& a, Vector2u& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector2u* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector2u* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector2u& from);
  void MergeFrom(const Vector2u& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector2u* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.Vector2u)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_test_2eproto::TableStruct;
  friend void ::protobuf_test_2eproto::InitDefaultsVector2uImpl();
};
// -------------------------------------------------------------------

class PlayerBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PlayerBase) */ {
 public:
  PlayerBase();
  virtual ~PlayerBase();

  PlayerBase(const PlayerBase& from);

  inline PlayerBase& operator=(const PlayerBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerBase(PlayerBase&& from) noexcept
    : PlayerBase() {
    *this = ::std::move(from);
  }

  inline PlayerBase& operator=(PlayerBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerBase* internal_default_instance() {
    return reinterpret_cast<const PlayerBase*>(
               &_PlayerBase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerBase* other);
  friend void swap(PlayerBase& a, PlayerBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerBase* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerBase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerBase& from);
  void MergeFrom(const PlayerBase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_name = 2;
  bool has_m_name() const;
  void clear_m_name();
  static const int kMNameFieldNumber = 2;
  const ::std::string& m_name() const;
  void set_m_name(const ::std::string& value);
  #if LANG_CXX11
  void set_m_name(::std::string&& value);
  #endif
  void set_m_name(const char* value);
  void set_m_name(const char* value, size_t size);
  ::std::string* mutable_m_name();
  ::std::string* release_m_name();
  void set_allocated_m_name(::std::string* m_name);

  // required .pb.Vector2u m_pos = 7;
  bool has_m_pos() const;
  void clear_m_pos();
  static const int kMPosFieldNumber = 7;
  const ::pb::Vector2u& m_pos() const;
  ::pb::Vector2u* release_m_pos();
  ::pb::Vector2u* mutable_m_pos();
  void set_allocated_m_pos(::pb::Vector2u* m_pos);

  // required uint32 m_id = 1;
  bool has_m_id() const;
  void clear_m_id();
  static const int kMIdFieldNumber = 1;
  ::google::protobuf::uint32 m_id() const;
  void set_m_id(::google::protobuf::uint32 value);

  // required uint32 m_orientation = 3;
  bool has_m_orientation() const;
  void clear_m_orientation();
  static const int kMOrientationFieldNumber = 3;
  ::google::protobuf::uint32 m_orientation() const;
  void set_m_orientation(::google::protobuf::uint32 value);

  // required uint32 m_state = 4;
  bool has_m_state() const;
  void clear_m_state();
  static const int kMStateFieldNumber = 4;
  ::google::protobuf::uint32 m_state() const;
  void set_m_state(::google::protobuf::uint32 value);

  // required uint32 m_health = 5;
  bool has_m_health() const;
  void clear_m_health();
  static const int kMHealthFieldNumber = 5;
  ::google::protobuf::uint32 m_health() const;
  void set_m_health(::google::protobuf::uint32 value);

  // required uint32 m_ammo = 6;
  bool has_m_ammo() const;
  void clear_m_ammo();
  static const int kMAmmoFieldNumber = 6;
  ::google::protobuf::uint32 m_ammo() const;
  void set_m_ammo(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PlayerBase)
 private:
  void set_has_m_id();
  void clear_has_m_id();
  void set_has_m_name();
  void clear_has_m_name();
  void set_has_m_orientation();
  void clear_has_m_orientation();
  void set_has_m_state();
  void clear_has_m_state();
  void set_has_m_health();
  void clear_has_m_health();
  void set_has_m_ammo();
  void clear_has_m_ammo();
  void set_has_m_pos();
  void clear_has_m_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr m_name_;
  ::pb::Vector2u* m_pos_;
  ::google::protobuf::uint32 m_id_;
  ::google::protobuf::uint32 m_orientation_;
  ::google::protobuf::uint32 m_state_;
  ::google::protobuf::uint32 m_health_;
  ::google::protobuf::uint32 m_ammo_;
  friend struct ::protobuf_test_2eproto::TableStruct;
  friend void ::protobuf_test_2eproto::InitDefaultsPlayerBaseImpl();
};
// -------------------------------------------------------------------

class Players : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Players) */ {
 public:
  Players();
  virtual ~Players();

  Players(const Players& from);

  inline Players& operator=(const Players& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Players(Players&& from) noexcept
    : Players() {
    *this = ::std::move(from);
  }

  inline Players& operator=(Players&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Players& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Players* internal_default_instance() {
    return reinterpret_cast<const Players*>(
               &_Players_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Players* other);
  friend void swap(Players& a, Players& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Players* New() const PROTOBUF_FINAL { return New(NULL); }

  Players* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Players& from);
  void MergeFrom(const Players& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Players* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PlayerBase _PlayerBase = 1;
  int _playerbase_size() const;
  void clear__playerbase();
  static const int kPlayerBaseFieldNumber = 1;
  const ::pb::PlayerBase& _playerbase(int index) const;
  ::pb::PlayerBase* mutable__playerbase(int index);
  ::pb::PlayerBase* add__playerbase();
  ::google::protobuf::RepeatedPtrField< ::pb::PlayerBase >*
      mutable__playerbase();
  const ::google::protobuf::RepeatedPtrField< ::pb::PlayerBase >&
      _playerbase() const;

  // @@protoc_insertion_point(class_scope:pb.Players)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::PlayerBase > _playerbase_;
  friend struct ::protobuf_test_2eproto::TableStruct;
  friend void ::protobuf_test_2eproto::InitDefaultsPlayersImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vector2u

// required int32 x = 1;
inline bool Vector2u::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector2u::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector2u::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector2u::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Vector2u::x() const {
  // @@protoc_insertion_point(field_get:pb.Vector2u.x)
  return x_;
}
inline void Vector2u::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector2u.x)
}

// required int32 y = 2;
inline bool Vector2u::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector2u::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector2u::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector2u::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Vector2u::y() const {
  // @@protoc_insertion_point(field_get:pb.Vector2u.y)
  return y_;
}
inline void Vector2u::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector2u.y)
}

// -------------------------------------------------------------------

// PlayerBase

// required uint32 m_id = 1;
inline bool PlayerBase::has_m_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBase::set_has_m_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBase::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBase::clear_m_id() {
  m_id_ = 0u;
  clear_has_m_id();
}
inline ::google::protobuf::uint32 PlayerBase::m_id() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_id)
  return m_id_;
}
inline void PlayerBase::set_m_id(::google::protobuf::uint32 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_id)
}

// required string m_name = 2;
inline bool PlayerBase::has_m_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBase::set_has_m_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBase::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBase::clear_m_name() {
  m_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m_name();
}
inline const ::std::string& PlayerBase::m_name() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_name)
  return m_name_.GetNoArena();
}
inline void PlayerBase::set_m_name(const ::std::string& value) {
  set_has_m_name();
  m_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_name)
}
#if LANG_CXX11
inline void PlayerBase::set_m_name(::std::string&& value) {
  set_has_m_name();
  m_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PlayerBase.m_name)
}
#endif
inline void PlayerBase::set_m_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_m_name();
  m_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PlayerBase.m_name)
}
inline void PlayerBase::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  m_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PlayerBase.m_name)
}
inline ::std::string* PlayerBase::mutable_m_name() {
  set_has_m_name();
  // @@protoc_insertion_point(field_mutable:pb.PlayerBase.m_name)
  return m_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerBase::release_m_name() {
  // @@protoc_insertion_point(field_release:pb.PlayerBase.m_name)
  clear_has_m_name();
  return m_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerBase::set_allocated_m_name(::std::string* m_name) {
  if (m_name != NULL) {
    set_has_m_name();
  } else {
    clear_has_m_name();
  }
  m_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_name);
  // @@protoc_insertion_point(field_set_allocated:pb.PlayerBase.m_name)
}

// required uint32 m_orientation = 3;
inline bool PlayerBase::has_m_orientation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerBase::set_has_m_orientation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerBase::clear_has_m_orientation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerBase::clear_m_orientation() {
  m_orientation_ = 0u;
  clear_has_m_orientation();
}
inline ::google::protobuf::uint32 PlayerBase::m_orientation() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_orientation)
  return m_orientation_;
}
inline void PlayerBase::set_m_orientation(::google::protobuf::uint32 value) {
  set_has_m_orientation();
  m_orientation_ = value;
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_orientation)
}

// required uint32 m_state = 4;
inline bool PlayerBase::has_m_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerBase::set_has_m_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerBase::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerBase::clear_m_state() {
  m_state_ = 0u;
  clear_has_m_state();
}
inline ::google::protobuf::uint32 PlayerBase::m_state() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_state)
  return m_state_;
}
inline void PlayerBase::set_m_state(::google::protobuf::uint32 value) {
  set_has_m_state();
  m_state_ = value;
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_state)
}

// required uint32 m_health = 5;
inline bool PlayerBase::has_m_health() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerBase::set_has_m_health() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerBase::clear_has_m_health() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerBase::clear_m_health() {
  m_health_ = 0u;
  clear_has_m_health();
}
inline ::google::protobuf::uint32 PlayerBase::m_health() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_health)
  return m_health_;
}
inline void PlayerBase::set_m_health(::google::protobuf::uint32 value) {
  set_has_m_health();
  m_health_ = value;
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_health)
}

// required uint32 m_ammo = 6;
inline bool PlayerBase::has_m_ammo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerBase::set_has_m_ammo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerBase::clear_has_m_ammo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerBase::clear_m_ammo() {
  m_ammo_ = 0u;
  clear_has_m_ammo();
}
inline ::google::protobuf::uint32 PlayerBase::m_ammo() const {
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_ammo)
  return m_ammo_;
}
inline void PlayerBase::set_m_ammo(::google::protobuf::uint32 value) {
  set_has_m_ammo();
  m_ammo_ = value;
  // @@protoc_insertion_point(field_set:pb.PlayerBase.m_ammo)
}

// required .pb.Vector2u m_pos = 7;
inline bool PlayerBase::has_m_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBase::set_has_m_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBase::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBase::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->Clear();
  clear_has_m_pos();
}
inline const ::pb::Vector2u& PlayerBase::m_pos() const {
  const ::pb::Vector2u* p = m_pos_;
  // @@protoc_insertion_point(field_get:pb.PlayerBase.m_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::Vector2u*>(
      &::pb::_Vector2u_default_instance_);
}
inline ::pb::Vector2u* PlayerBase::release_m_pos() {
  // @@protoc_insertion_point(field_release:pb.PlayerBase.m_pos)
  clear_has_m_pos();
  ::pb::Vector2u* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline ::pb::Vector2u* PlayerBase::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) {
    m_pos_ = new ::pb::Vector2u;
  }
  // @@protoc_insertion_point(field_mutable:pb.PlayerBase.m_pos)
  return m_pos_;
}
inline void PlayerBase::set_allocated_m_pos(::pb::Vector2u* m_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete m_pos_;
  }
  if (m_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m_pos, submessage_arena);
    }
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  m_pos_ = m_pos;
  // @@protoc_insertion_point(field_set_allocated:pb.PlayerBase.m_pos)
}

// -------------------------------------------------------------------

// Players

// repeated .pb.PlayerBase _PlayerBase = 1;
inline int Players::_playerbase_size() const {
  return _playerbase_.size();
}
inline void Players::clear__playerbase() {
  _playerbase_.Clear();
}
inline const ::pb::PlayerBase& Players::_playerbase(int index) const {
  // @@protoc_insertion_point(field_get:pb.Players._PlayerBase)
  return _playerbase_.Get(index);
}
inline ::pb::PlayerBase* Players::mutable__playerbase(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Players._PlayerBase)
  return _playerbase_.Mutable(index);
}
inline ::pb::PlayerBase* Players::add__playerbase() {
  // @@protoc_insertion_point(field_add:pb.Players._PlayerBase)
  return _playerbase_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PlayerBase >*
Players::mutable__playerbase() {
  // @@protoc_insertion_point(field_mutable_list:pb.Players._PlayerBase)
  return &_playerbase_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PlayerBase >&
Players::_playerbase() const {
  // @@protoc_insertion_point(field_list:pb.Players._PlayerBase)
  return _playerbase_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
